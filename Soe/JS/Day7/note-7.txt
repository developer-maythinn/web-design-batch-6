

insertBefore() => If you don't want appendChild() that you can use insertBefore()
remove() => remove an HTML element
removeChild() => For browsers that does not support the remove() method, you have to find the parent node to remove an element:
https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild
<div id="div1">
  <p id="p1">This is a paragraph.</p>
  <p id="p2">This is another paragraph.</p>
</div>

<script>
var parent = document.getElementById("div1");
var child = document.getElementById("p1");
parent.removeChild(child);
</script>
replaceChild() => replace an element to the HTML DOM


Dom Events
https://www.w3schools.com/js/js_htmldom_events.asp


JavaScript HTML DOM EventListener
https://www.w3schools.com/js/js_htmldom_eventlistener.asp
https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener

element.addEventListener(event, function, useCapture);

element.addEventListener("click", function(){ alert("Hello World!"); });

element.addEventListener("click", myFunction);
function myFunction() {
  alert ("Hello World!");
}


**************************************************************
https://www.w3schools.com/js/js_date_methods.asp

**************************************************************
JavaScript Timing Events
https://www.w3schools.com/js/js_timing.asp

**************************************************************
JSON
https://www.w3schools.com/js/js_json_intro.asp
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON
Json format
{ "name":"John", "age":30, "city":"New York"}
JSON.stringify to convert objects into JSON.
JSON.parse to convert JSON back into an object.

JSON supports following data types:
Objects { ... }
Arrays [ ... ]
Primitives:
strings,
numbers,
boolean values true/false,
null.


